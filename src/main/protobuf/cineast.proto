syntax = "proto3";

package org.vitrivr.cineast.api.grpc;

option java_package = "org.vitrivr.cineast.api.grpc";
option java_outer_classname = "CineastGrpc";

service CineastQuery {

    rpc GetMediaSegments (MediaSegmentIdList) returns (MediaSegmentQueryResult);
    rpc GetMediaObjects (MediaObjectIdList) returns (MediaObjectQueryResult);
    rpc GetMediaSegmentScores (Query) returns (stream SimilarityQueryResult);
    rpc GetSimilar (Query) returns (stream QueryResult);

}

service CineastExtract {

}

message MediaSegmentId {
    string id = 1;
}

message MediaSegmentIdList {
    QueryConfig queryConfig = 1;
    repeated MediaSegmentId ids = 2;
}

message MediaObjectId {
    string id = 1;
}

message MediaObjectIdList {
    QueryConfig queryConfig = 1;
    repeated MediaObjectId ids = 2;
}

message QueryId {
    string id = 1;
}

message QueryConfig {
    QueryId queryId = 1;
    int32 maxResults = 2;
    repeated string hints = 3;
}

message MediaSegmentIdScore {
    MediaSegmentId id = 1;
    double score = 2;
}

message MediaSegment {
    MediaSegmentId segmentId = 1;
    MediaObjectId objectId = 2;
    int32 start = 3;
    int32 end = 4;
    int32 sequenceNumber = 5;
    float startAbs = 6;
    float endAbs = 7;
}

message MediaObject {
    MediaObjectId objectId = 1;
    string name = 2;
    string path = 3;

    enum MediaType {
        VIDEO = 0;
        IMAGE = 1;
        AUDIO = 2;
        MODEL_3D = 3;
        IMAGE_SEQUENCE = 4;
        UNKNOWN = 99;
    }

    MediaType type = 4;

    string contentUrl = 5;
}

message MediaSegmentMetaData {
    MediaSegmentId segmentId = 1;
    string domain = 2;
    string key = 3;
    string value = 4;
}

message MediaObjectMetaData {
    MediaObjectId objectId = 1;
    string domain = 2;
    string key = 3;
    string value = 4;
}

message SimilarityQueryResult {
    QueryId queryId = 1;
    string category = 2;
    repeated MediaSegmentIdScore results = 3;
}

message MediaSegmentQueryResult {
    QueryId queryId = 1;
    repeated MediaSegment segments = 2;
}

message MediaObjectQueryResult {
    QueryId queryId = 1;
    repeated MediaObject objects = 2;
}

message MediaSegmentMetaDataQueryResult {
    QueryId queryId = 1;
    repeated MediaSegmentMetaData segmentMetaData = 2;
}

message MediaObjectMetaDataQueryResult {
    QueryId queryId = 1;
    repeated MediaObjectMetaData objectMetaData = 2;
}

message QueryResult {
    oneof result {
        SimilarityQueryResult similarityQueryResult = 1;
        MediaSegmentQueryResult mediaSegmentQueryResult = 2;
        MediaObjectQueryResult mediaObjectQueryResult = 3;
        MediaSegmentMetaDataQueryResult mediaSegmentMetaDataQueryResult = 4;
        MediaObjectMetaDataQueryResult mediaObjectMetaDataQueryResult = 5;
    }
}


message AudioQueryContainer {
    repeated bytes audioFrames = 1;
}

message BooleanQueryContainer {
    string attribute = 1;

    enum Operator {
        EQ = 0;
        NEQ = 1;
        GEQ = 2;
        LEQ = 3;
        GREATER = 4;
        LESS = 5;
        BETWEEN = 6;
        LIKE = 7;
        ILIKE = 8;
        NLIKE = 9;
        RLIKE = 10;
        ISNULL = 11;
        ISNOTNULL = 12;
        IN = 13;
    }

    Operator operator = 2;

    repeated string value = 3;
}

message IdQueryContainer {
    MediaSegmentId segmentId = 1;
}

message ImageQueryContainer {
    bytes image = 1;
}

message InstantQueryContainer {
    string instant = 1; //TODO better representation?
}

message LocationQueryContainer {
    float longitude = 1;
    float latitude = 2;
}

message ModelQueryContainer {
    bytes model = 1;
}

message MotionQueryContainer {

    repeated MotionPath foregroundPath = 1;
    repeated MotionPath backgroundPath = 2;

    message MotionPath {

        repeated Point path = 1;

        message Point {
            float x = 1;
            float y = 2;
        }
    }
}

message SemanticMapQueryContainer {
    bytes image = 1;
    map<int32, string> concepts = 2;
}

message TagQueryContainer {
    //TODO
}

message TextQueryContainer {
    string text = 1;
}

message QueryContainer {
    oneof container {
        AudioQueryContainer audioQueryContainer = 1;
        BooleanQueryContainer booleanQueryContainer = 2;
        IdQueryContainer idQueryContainer = 3;
        ImageQueryContainer imageQueryContainer = 4;
        InstantQueryContainer instantQueryContainer = 5;
        LocationQueryContainer locationQueryContainer = 6;
        ModelQueryContainer modelQueryContainer = 7;
        MotionQueryContainer motionQueryContainer = 8;
        SemanticMapQueryContainer semanticMapQueryContainer = 9;
        TagQueryContainer tagQueryContainer = 10;
        TextQueryContainer textQueryContainer = 11;
    }
    repeated string category = 20;
    QueryConfig config = 21;
}

message Query {
    repeated QueryContainer container = 1;
}